package project1;

import java.io.IOException;
import java.util.StringTokenizer;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.examples.WordCount;
import org.apache.hadoop.examples.WordCount.TokenizerMapper;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;

public class CountryCode2_6 {
	
	public static class TokenizerMapper 
			extends Mapper<Object, Text, Text, IntWritable>{
		
		private Text customer= new Text();
		
		public void map(Object key, Text value, Context context
				)throws IOException, InterruptedException{
			StringTokenizer itr = new StringTokenizer(value.toString());
			while(itr.hasMoreTokens()){
				String records = itr.nextToken();
				String[] sep = records.split(",");
				
				// 2<= CountryCode <=6 
				if(Integer.parseInt(sep[3])>=2 && Integer.parseInt(sep[3])<=6){
					customer.set(sep[0]+","+sep[1]); // ID Name  (key)
				// CountryCode (Value)
					IntWritable cCode = new IntWritable(Integer.parseInt(sep[3]));
					context.write(customer, cCode);
				}
			}
		}
		
		public static void main(String[] args) throws Exception{
			Configuration conf = new Configuration();
		    if (args.length != 2) {
		      System.err.println("Usage: wordcount <HDFS input file> <HDFS output file>");
		      System.exit(2);
		    }
		    Job job = new Job(conf, "CCode 2-6");
		    job.setJarByClass(CountryCode2_6.class);
		    job.setMapperClass(TokenizerMapper.class);
		    job.setOutputKeyClass(Text.class);
		    job.setOutputValueClass(IntWritable.class);
		    FileInputFormat.addInputPath(job, new Path(args[0]));
		    FileOutputFormat.setOutputPath(job, new Path(args[1]));
		    System.exit(job.waitForCompletion(true) ? 0 : 1);
		}
	}
}
