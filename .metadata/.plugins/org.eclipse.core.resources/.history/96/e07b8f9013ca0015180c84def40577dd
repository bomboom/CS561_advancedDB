package project1;

import java.io.IOException;
import java.util.StringTokenizer;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Reducer;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;

public class Query2 {
	public static class TokenizerMapper
			extends Mapper<Object, Text, Text, Text>{
		
		private Text ID = new Text();
		private Text num = new Text();
		
		public void map(Object key, Text value, Context context
				)throws IOException, InterruptedException{
			StringTokenizer itr = new StringTokenizer(value.toString());
			while(itr.hasMoreTokens()){
				String records = itr.nextToken();
				String[] sep = records.split(",");
				ID.set(sep[1]);
				num.set("1 "+sep[2]);
				context.write(ID, num);
			}
		}
		
	} //mapper finish
	
	//Reducer
	public static class sumReducer
			extends Reducer<Text, Text, Text, Text>{
		
		private Text result = new Text();
		
		public void reduce(Text key, Iterable<Text> value, Context context
				)throws IOException, InterruptedException{
			int sum = 0;
			float totalnum = 0;
			for(Text val: value){
				System.out.println(val.toString());
				String[] sep = val.toString().split(" ");
				sum += Integer.parseInt(sep[0]);
				totalnum += Float.parseFloat(sep[1]);
			}
			result.set(Integer.toString(sum)+" "+Float.toString(totalnum));
			System.out.println(result.toString());
			context.write(key, result);
		}
	} //reducer finish

	public static void main(String[] args) throws IOException, InterruptedException, ClassNotFoundException{
		Configuration conf = new Configuration();
		if(args.length!=2){
			System.err.println("Wrong ussage");
			System.exit(2);
		}
		
		Job job = new Job(conf, "Query2");
		job.setJarByClass(Query2.class);
		job.setMapperClass(TokenizerMapper.class);
		job.setCombinerClass(sumReducer.class);
		job.setReducerClass(sumReducer.class);
		job.setNumReduceTasks(2);
		job.setOutputKeyClass(Text.class);
		job.setOutputValueClass(Text.class);
		FileInputFormat.addInputPath(job, new Path(args[0]));
		FileOutputFormat.setOutputPath(job, new Path(args[1]));
		System.exit(job.waitForCompletion(true)? 0:1);
	}
}
